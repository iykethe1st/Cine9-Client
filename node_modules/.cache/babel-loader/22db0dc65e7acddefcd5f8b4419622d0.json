{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Desktop/vidcity/src/components/common/listGroup.jsx\";\nimport React, { Component } from \"react\";\nimport { getGenres } from \"../../services/fakeGenreService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListGroup = props => {\n  const {\n    onGenreSwitch,\n    genres,\n    textProperty,\n    valueProperty,\n    selectedGenre\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-group-item\",\n      onClick: () => onResetGenre(),\n      children: \"All Genres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: genre === selectedGenre ? \"list-group-item active\" : \"list-group-item\",\n      onClick: () => onGenreSwitch(genre),\n      children: genre[textProperty]\n    }, genre[valueProperty], false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ListGroup;\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\"\n};\nexport default ListGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListGroup\");","map":{"version":3,"names":["React","Component","getGenres","ListGroup","props","onGenreSwitch","genres","textProperty","valueProperty","selectedGenre","onResetGenre","map","genre","defaultProps"],"sources":["/Users/pc/Desktop/vidcity/src/components/common/listGroup.jsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { getGenres } from \"../../services/fakeGenreService\";\n\nconst ListGroup = (props) => {\n  const { onGenreSwitch, genres, textProperty, valueProperty, selectedGenre } =\n    props;\n\n  return (\n    <ul className=\"list-group\">\n      <li className=\"list-group-item\" onClick={() => onResetGenre()}>\n        All Genres\n      </li>\n\n      {genres.map((genre) => (\n        <li\n          key={genre[valueProperty]}\n          className={\n            genre === selectedGenre\n              ? \"list-group-item active\"\n              : \"list-group-item\"\n          }\n          onClick={() => onGenreSwitch(genre)}\n        >\n          {genre[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,iCAA1B;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B,MAAM;IAAEC,aAAF;IAAiBC,MAAjB;IAAyBC,YAAzB;IAAuCC,aAAvC;IAAsDC;EAAtD,IACJL,KADF;EAGA,oBACE;IAAI,SAAS,EAAC,YAAd;IAAA,wBACE;MAAI,SAAS,EAAC,iBAAd;MAAgC,OAAO,EAAE,MAAMM,YAAY,EAA3D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAKGJ,MAAM,CAACK,GAAP,CAAYC,KAAD,iBACV;MAEE,SAAS,EACPA,KAAK,KAAKH,aAAV,GACI,wBADJ,GAEI,iBALR;MAOE,OAAO,EAAE,MAAMJ,aAAa,CAACO,KAAD,CAP9B;MAAA,UASGA,KAAK,CAACL,YAAD;IATR,GACOK,KAAK,CAACJ,aAAD,CADZ;MAAA;MAAA;MAAA;IAAA,QADD,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAzBD;;KAAML,S;AA2BNA,SAAS,CAACU,YAAV,GAAyB;EACvBN,YAAY,EAAE,MADS;EAEvBC,aAAa,EAAE;AAFQ,CAAzB;AAKA,eAAeL,SAAf"},"metadata":{},"sourceType":"module"}